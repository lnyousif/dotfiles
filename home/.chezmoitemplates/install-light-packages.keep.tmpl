#!/usr/bin/env bash

export PATH="$HOME/.local/bin/:$PATH"

mkdir -p "$HOME/Downloads/AppImages"



{{ range $setup, $value := .setups }}

{{ if $value }}
echo "Install Packages for: {{ $setup }}"

echo "installing from data packages"

# Linux self installing packages
echo "Installing self installing packages"

{{ range index .packages $setup "linux" "common" "linux_url" }}
bash -c {{ . | quote }}
{{ end }}

# Executables from GitHub
echo "Installing executables from GitHub"

## Appimages
echo "Installing AppImages"
{{ $range := index .packages $setup "linux" "common" "dra" "appimage" }}
{{ range $range }}
echo "Downloading {{.}}"
dra download -o "$HOME"/Downloads/AppImages/ -i {{.}}
{{ end }}

## Binaries
echo "Installing binary executables"
{{ $range := index .packages $setup "linux" "common" "dra" "bin" }}
{{ range $range }}
echo "Downloading {{.}}"
dra download -o "$HOME"/.local/bin/ -i {{.}}
{{ end }}

{{- if (or (eq .features.headless false) (eq .features.codespace false)) }}

  # Flatpak
  echo "Installing Flatpak packages"
  flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
  flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo

  {{ $range := index .packages $setup "linux" "common" "flatpak" }}
  {{ range $range }}
  flatpak install -y flathub {{ . }}
  {{ end }}
{{ end }}

# Native packages

{{ if or (eq .osid "linux-debian") (eq .osid "linux-ubuntu") (eq .osid "linux-debian ubuntu") (eq .osid "linux-ubuntu debian") }}
    ## Debian
    echo "Installing Debian Packages"

    {{ $range := index .packages $setup "linux" "common" "apt" }}
    sudo nala install --update -y -o APT::Get::AllowUnauthenticated=true {{ range $range }} {{.}} {{ end }}
    {{ $range := index .packages $setup "linux" "common" "apt_url" }}
    sudo nala install --update -y -o APT::Get::AllowUnauthenticated=true {{ range $range }}{{. | quote}} {{ end }}

    {{ $range := index .packages $setup "linux" "common" "apt_junk" }}
    {{ range $range }}
    sudo nala remove -y {{ . | quote }}
    {{ end }}

    if [[ $XDG_SESSION_DESKTOP == "KDE" ]]; then
      {{ $range := index .packages $setup "linux" "common" "kde" }}
      sudo nala install --update -y -o APT::Get::AllowUnauthenticated=true {{ range $range }} {{.}} {{ end }}
    fi

    if hostnamectl | grep -iq 'starlite'; then
      echo "Installing tablet specific packages"
      {{ $range := index .packages $setup "linux" "common" "tablet" }}
      sudo nala install --update -y -o APT::Get::AllowUnauthenticated=true {{ range $range }} {{.}} {{ end }}
    fi
{{ else if eq .osid "linux-fedora" }}
    ## Fedora
    echo "Installing RPM packages"

    {{ $range := index .packages $setup "linux" "common" "apt" }}
    sudo dnf5 install -y {{ range $range }} {{.}} {{ end }}
    {{ $range := index .packages $setup "linux" "common" "apt_url" }}
    {{ range $range }}
    sudo dnf5 install -y {{ . | quote }}
    {{ end }}

    {{ $range := index .packages $setup "linux" "common" "apt_junk" }}
    {{ range $range }}
    sudo dnf5 remove -y {{ . | quote }}
    {{ end }}

    if [[ $XDG_SESSION_DESKTOP == "KDE" ]]; then
      {{ $range := index .packages $setup "linux" "common" "kde" }}
      sudo dnf5 install -y {{ range $range }} {{.}} {{ end }}
    fi

    if hostnamectl | grep -iq 'starlite'; then
      echo "Installing tablet specific packages"
      {{ $range := index .packages $setup "linux" "common" "tablet" }}
      sudo dnf5 install -y {{ range $range }} {{.}} {{ end }}
    fi


{{ else if eq .osid "linux-arch" }}
    ## Arch
    if hostnamectl | grep -iq 'starlite'; then
      echo "Installing tablet specific packages"
      {{ $range := index .packages $setup "linux" "common" "tablet" }}
      sudo pacman -Syu --needed {{ range $range }} {{.}} {{ end }}
    fi

    if type -P yay >/dev/null 2>&1; then
      {{ $range := index .packages $setup "linux" "common" "apt" }}
      yay -Syu --needed {{ range $range }} {{.}} {{ end }}
    elif type -P paru >/dev/null 2>&1; then
      {{ $range := index .packages $setup "linux" "common" "kde" }}
      paru -Syu --needed {{ range $range }} {{.}} {{ end }}
    fi
{{ end }}


# Python packages
echo "Installing Python packages with pip"
{{ $range := index .packages $setup "linux" "common" "pips" }}
{{ range $range }}
pip install {{ . | quote }}
{{ end }}

{{ end }}

{{ end }}
