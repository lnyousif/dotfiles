# -*-mode:conf-toml-*- vim:ft=toml

# ~/.local/share/chezmoi/.chezmoi.toml.tmpl
# =============================================================================
# Used to customize configuration when doing a `chezmoi init`.
#
# This template file will trigger prompts to fill-in machine-specific
# templateable values. The resulting file is then created at
# `~/.config/chezmoi/chezmoi.toml`
# See https://www.chezmoi.io/docs/how-to/
#
# {{- /* This file supports Go's text/template language. */}}

# Define string variables for user-specific configurations
    {{/* String tags */}}
    {{ $email := "Laith@tmobi.link" }}  # Default email address
    {{ $name := "Laith Yousif" }}       # Default name
    {{ $editor := "micro" }}             # Default editor

# Define boolean feature flags for machine-specific configurations
    {{/* boolean feature tags */}}
    {{- $encryptdecrypt:= false -}}     # Whether encryptdecrypt are enabled
    {{- $superuser := "" -}}            # Super User
    {{- $setuptype := "" }}             # Setup Type
    {{- $development := false -}}       # Whether development tools are enabled
    {{- $kids := false -}}              # Whether this is a kid-friendly setup
    {{- $passwordmanager := false -}}   # Whether password manager is enabled
    {{- $codespace := false -}}         # Whether this is a GitHub Codespace
    {{- $ephemeral := false -}}         # Whether this is an ephemeral machine
    {{- $headless := false -}}          # Whether this is a headless machine
    {{- $work := false -}}              # Whether this is a work machine

    # Detect specific environments like GitHub Codespaces, VSCode remote containers, etc.

    {{/* detect GitHub codespaces, VSCode remote containers, Docker containers, Multipass VMs, and Vagrant boxes */}}

    {{- $isCodespace := env "CODESPACES" -}}
    {{- $isRemoteEnvironment := env "REMOTE_CONTAINERS_IPC" -}}
    {{- $isSpecialUser := eq .chezmoi.username "vagrant" "vscode" -}}
    {{- if or $isCodespace $isRemoteEnvironment $isSpecialUser -}}
        sourceDir = {{ .chezmoi.sourceDir | quote }}  # Set source directory
        {{-   $codespace = true -}}                   # Mark as a codespace
        {{-   $ephemeral = true -}}                   # Mark as ephemeral
        {{-   $headless = true -}}                    # Mark as headless
        {{-   $encryptdecrypt = false -}}             # Disable encryptdecrypt
        {{-   $development = false -}}                # Disable development tools
        {{-   $superuser = "sudo" -}}                 # Setup superuser to install tools

        {{/* for  GitHub codespaces, VSCode remote containers, Docker containers, */}}
        {{/* Multipass VMs, and Vagrant boxes setup the properties without asking */}}
        {{ $name = "Laith Yousif" }}
        {{ $email = "Laith@tmobi.link" }}

    {{- else -}}
        # Prompt user for configuration values if not in a codespace

          {{- $setuptype = promptChoiceOnce . "setuptype" "What type of setup are you choosing " (list "basic" "personal" "kids" "development" "work") -}}

          {{- if eq $setuptype "basic" -}}
            {{ $development = false }}
            {{ $kids = false }}
            {{ $work = false }}
          {{- else if eq $setuptype "dev-machine" -}}
            {{ $development = true }}
            {{ $kids = false }}
            {{ $work = false }}
            {{ $superuser = "sudo" }}
          {{- else if eq $setuptype "work" -}}
            {{ $development = true }}
            {{ $kids = false }}
            {{ $work = true }}
          {{- else if eq $setuptype "kids" -}}
            {{ $development = false }}
            {{ $kids = true }}
            {{ $work = false }}
          {{- end -}}

          {{- if eq $work true -}}
              # Prompt for Git name with a default value
              {{- $name = promptStringOnce . "name" "Git name for the author/committer (Default: Laith Yousif)" }}
              {{- if not $name }}{{ $name = "Laith Yousif" }}{{ end -}}

              # Prompt for Git email with a default value
              {{- $email = promptStringOnce . "email" "Git email address for the author/committer (Default: Laith@tmobi.link)" }}
              {{- if not $email }}{{ $email = "Laith@tmobi.link" }}{{ end -}}
          {{- else if and (eq $development true) (eq $kids false) -}}
              # Prompt for enabling encryptdecrypt with a default value of true
              {{- $encryptdecrypt = promptBoolOnce . "features.encryptdecrypt" "Should I setup Encryption Decryption  (true/false)" -}}

              # If encryptdecrypt are enabled, prompt for the seting up password manager database path
              {{- if $encryptdecrypt -}}
                {{- $passwordmanager = promptBoolOnce . "features.passwordmanager" "Should I setup a Password Manager  (true/false)" -}}
              {{- end -}}
          {{- end -}}
    {{- end -}}

    # Determine the operating system ID
    {{- $osid := .chezmoi.os -}}
    {{- if hasKey .chezmoi.osRelease "id" -}}
      {{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
    {{- end -}}
    {{- if hasKey .chezmoi.osRelease "idLike" -}}
      {{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.idLike -}}
    {{- end -}}


{{- if $encryptdecrypt -}}
# Define encryption settings
encryption = "age"
[age]
    identity = "~/.config/chezmoi/key.txt"                                        # Path to the age identity file
    recipient = "age14t6vfqtd0f2z9gth0tsnw3qwh6nxgkvem5exjzs3x9juyp5659wqh47sfw"  # Age recipient key
{{- end -}}

# Define data section with user and machine-specific values
[data]
    email = "{{ $email }}"                                # User email
    name = "{{ $name }}"                                  # User name
    osid = "{{ $osid }}"                                  # Operating system ID
    setuptype = "{{ $setuptype }}"                        # Setup Type
    superuser = "{{ $superuser }}"                        # Superuser

    setups.base = {{ true }}                              # True basically always, the base is setups flag to setup the bare minimum
    setups.development = {{ $development }}               # development tools setups flag
    setups.kids = {{ $kids }}                             # Kids setups flag

    features.ephemeral = {{ $ephemeral }}                 # Ephemeral feature flag
    features.headless = {{ $headless }}                   # Headless feature flag
    features.encryptdecrypt = {{ $encryptdecrypt }}       # encryptdecrypt feature flag
    features.codespace = {{ $codespace }}                 # Codespace feature flag
    features.passwordmanager = {{ $passwordmanager }}     # Password manager feature flag
    features.work = {{ $work }}                           # Work feature flag

# Define editor settings
[edit]
    command = {{ $editor | quote }}                           # Editor command
    args = ["--wait"]                                         # Editor arguments

# Define KeepassXC settings
[keepassxc]
    database = {{ ".keepassxc/chezmoi.kdbx" | quote }}         # KeepassXC database path
    args = ["-k",".keepassxc/keypass.keyx"]                    # KeepassXC arguments
    prompt = true                                              # Enable/Disable KeepassXC prompts
