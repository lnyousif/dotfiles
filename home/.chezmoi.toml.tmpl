# -*-mode:conf-toml-*- vim:ft=toml

# ~/.local/share/chezmoi/.chezmoi.toml.tmpl
# =============================================================================
# Used to customize configuration when doing a `chezmoi init`.
#
# This template file will trigger prompts to fill-in machine-specific
# templateable values. The resulting file is then created at
# `~/.config/chezmoi/chezmoi.toml`
# See https://www.chezmoi.io/docs/how-to/
#
# {{- /* This file supports Go's text/template language. */}}

# Define string variables for user-specific configurations
    {{/* String tags */}}
    {{ $email := "Laith@tmobi.link" }}  # Default email address
    {{ $name := "Laith Yousif" }}       # Default name
    {{ $editor := "micro" }}             # Default editor

# Define boolean feature flags for machine-specific configurations
    {{/* boolean feature tags */}}
    {{- $secrets:= false -}}            # Whether secrets are enabled
    {{- $setuptype := "" }}             # Setup Type
    {{- $powerful := false -}}          # Whether powerful tools are enabled
    {{- $kids := false -}}              # Whether this is a kid-friendly setup
    {{- $codespace := false -}}         # Whether this is a GitHub Codespace
    {{- $ephemeral := false -}}         # Whether this is an ephemeral machine
    {{- $headless := false -}}          # Whether this is a headless machine
    {{- $keepassxcdb := "" -}}          # Path to KeepassXC database (empty if not used)

    # Detect specific environments like GitHub Codespaces, VSCode remote containers, etc.

    {{/* detect GitHub codespaces, VSCode remote containers, Docker containers, Multipass VMs, and Vagrant boxes */}}

    {{- $isCodespace := env "CODESPACES" -}}
    {{- $isRemoteEnvironment := env "REMOTE_CONTAINERS_IPC" -}}
    {{- $isSpecialUser := eq .chezmoi.username "vagrant" "vscode" -}}
    {{- if or $isCodespace $isRemoteEnvironment $isSpecialUser -}}
        sourceDir = {{ .chezmoi.sourceDir | quote }}  # Set source directory
        {{-   $codespace = true -}}                   # Mark as a codespace
        {{-   $ephemeral = true -}}                   # Mark as ephemeral
        {{-   $headless = true -}}                    # Mark as headless
        {{-   $secrets = false -}}                    # Disable secrets
        {{-   $powerful = false -}}                   # Disable powerful tools

        {{/* for  GitHub codespaces, VSCode remote containers, Docker containers, */}}
        {{/* Multipass VMs, and Vagrant boxes setup the properties without asking */}}
        {{ $name = "Laith Yousif" }}
        {{ $email = "Laith@tmobi.link" }}

    {{- else -}}
        # Prompt user for configuration values if not in a codespace

          {{- $setuptype = promptChoiceOnce . "setuptype" "What type of setup are you choosing " (list "light" "powerful" "kids") -}}

          {{- if eq $setuptype "light" -}}
            {{ $powerful = false }}
            {{ $kids = false }}
          {{- else if eq $setuptype "powerful" -}}
            {{ $powerful = true }}
            {{ $kids = false }}
          {{- else if eq $setuptype "kids" -}}
            {{ $powerful = false }}
            {{ $kids = true }}
          {{- end -}}

        {{- if eq $kids false -}}
          # Prompt for Git name with a default value
          {{- $name = promptStringOnce . "name" "Git name for the author/committer (Default: Laith Yousif)" }}
          {{- if not $name }}{{ $name = "Laith Yousif" }}{{ end -}}

          # Prompt for Git email with a default value
          {{- $email = promptStringOnce . "email" "Git email address for the author/committer (Default: Laith@tmobi.link)" }}
          {{- if not $email }}{{ $email = "Laith@tmobi.link" }}{{ end -}}

          # Prompt for enabling secrets with a default value of true
          {{- $secrets = promptBoolOnce . "features.secrets" "Secrets - Should I setup pass manager locally  (true/false, default true)" -}}
          {{- if not $secrets }}{{ $secrets = true }}{{ else }} {{ end -}}

          # If secrets are enabled, prompt for the KeepassXC database path
          {{- if $secrets -}}
              {{- $keepassxcdb = promptStringOnce . "keepassxc" "KeepassXC DB Path (default .keepassxc/chezmoi.kdbx) " -}}
              {{- if not $keepassxcdb }}{{ $keepassxcdb = ".keepassxc/chezmoi.kdbx" }}{{ end -}}
          {{- end -}}
        {{- end -}}

    {{- end -}}

    # Determine the operating system ID
    {{- $osid := .chezmoi.os -}}
    {{- if hasKey .chezmoi.osRelease "id" -}}
    {{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
    {{- end -}}
    {{- if hasKey .chezmoi.osRelease "idLike" -}}
    {{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.idLike -}}
    {{- end -}}

# Define encryption settings
encryption = "age"
[age]
    identity = "~/.config/chezmoi/key.txt"  # Path to the age identity file
    recipient = "age14t6vfqtd0f2z9gth0tsnw3qwh6nxgkvem5exjzs3x9juyp5659wqh47sfw"  # Age recipient key

# Define data section with user and machine-specific values
[data]
    email = "{{ $email }}"                  # User email
    name = "{{ $name }}"                    # User name
    osid = "{{ $osid }}"                    # Operating system ID
    setuptype = "{{ $setuptype }}"           # Setup Type
    keepassxc = "{{ $keepassxcdb }}"        # KeepassXC database path

    setups.base = {{ true }}                # True basically always, the base is setups flag to setup the bare minimum
    setups.powerful = {{ $powerful }}       # Powerful tools setups flag
    setups.kids = {{ $kids }}               # Kids setups flag

    features.ephemeral = {{ $ephemeral }}   # Ephemeral features flag
    features.headless = {{ $headless }}     # Headless setups flag
    features.secrets = {{ $secrets }}       # Secrets feature flag
    features.codespace = {{ $codespace }}   # Codespace feature flag

# Define editor settings
[edit]
command = {{ $editor | quote }}             # Editor command
args = ["--wait"]                           # Editor arguments

# Define KeepassXC settings
[keepassxc]
database = {{ $keepassxcdb | quote }}       # KeepassXC database path
args = ["--no-password","-k",".keepassxc/keypass.keyx"]  # KeepassXC arguments
prompt = false                              # Disable KeepassXC prompts
