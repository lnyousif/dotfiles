# -*-mode:conf-toml-*- vim:ft=toml

# ~/.local/share/chezmoi/.chezmoi.toml.tmpl
# =============================================================================
# Used to customize configuration when doing a `chezmoi init`.
#
# This template file will trigger prompts to fill-in machine-specific
# templateable values. The resulting file is then created at
# `~/.config/chezmoi/chezmoi.toml`
# See https://www.chezmoi.io/docs/how-to/
#
# {{- /* This file supports Go's text/template language. */}}


    {{/* String tags */}}
    {{ $email := "Laith@tmobi.link" }}
    {{ $name := "Laith Yousif" }}
    {{ $editor := "nano" }}

    {{/* boolean feature tags */}}
    {{- $secrets:= false -}}
    {{- $powerful := false -}}
    {{- $kids := false -}}
    {{- $codespace := false -}}
    {{- $ephemeral := false -}}{{/* true if this machine is ephemeral, e.g. a cloud or VM instance */}}
    {{- $headless := false -}}{{/* true if this machine does not have a screen and keyboard */}}
    {{- $keepassxcdb := "" -}}{{/* empty if this machine does not have secrets */}}


    {{/* detect GitHub codespaces, VSCode remote containers, Docker containers, Multipass VMs, and Vagrant boxes */}}
    {{- if or (env "CODESPACES") (env "REMOTE_CONTAINERS_IPC") (eq .chezmoi.username "root" "ubuntu" "vagrant" "vscode") -}}
    sourceDir = {{ .chezmoi.sourceDir | quote }}
    {{-   $codespace = true -}}
    {{-   $ephemeral = true -}}
    {{-   $headless = true -}}
    {{-   $secrets = false -}}
    {{-   $powerful = false -}}
    {{- end -}}

    {{- if  not $codespace -}}

        {{- $name = promptStringOnce . "name" "Git name for the author/committer (Default: Laith Yousif)" }}
        {{- if not $name }}{{ $name = "Laith Yousif" }}{{ end -}}
        
        {{- $email = promptStringOnce . "email" "Git email address for the author/committer (Default: Laith@tmobi.link)" }}
        {{- if not $email }}{{ $email = "Laith@tmobi.link" }}{{ end -}}


        {{/* personal=true if this machine should have personal secrets */}}
        {{- $secrets = promptBoolOnce . "features.secrets" "Personal - Should I setup pass manager locally  (true/false, default true)" -}}  
        {{- if not $secrets }}{{ $secrets = true }}{{ end -}}

        {{/* powerful=true otherwise light if this machine should have work tools & secrets */}}
        {{- $powerful = promptBoolOnce . "features.powerful" "Powerful - Should I setup heavy tools locally  (true/false, default true)" -}}  
        {{- if not $powerful }}{{ $powerful = true }}{{ end -}}


        {{- if $secrets -}}
            {{- $keepassxcdb = promptStringOnce . "keepassxc" "KeepassXC DB Path (default .keepassxc/chezmoi.kdbx) " -}}
            {{- if not $keepassxcdb }}{{ $keepassxcdb = ".keepassxc/chezmoi.kdbx" }}{{ end -}}
        {{- end -}}

    {{- end -}}

    {{- $osid := .chezmoi.os -}}
    {{- if hasKey .chezmoi.osRelease "id" -}}
    {{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
    {{- end -}}
    {{- if hasKey .chezmoi.osRelease "idLike" -}}
    {{-   $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.idLike -}}
    {{- end -}}


# The values exist below

encryption = "age"
[age]
    identity = "~/.config/chezmoi/key.txt"
    recipient = "age14t6vfqtd0f2z9gth0tsnw3qwh6nxgkvem5exjzs3x9juyp5659wqh47sfw"

[data]
    email = "{{ $email }}"
    name = "{{ $name }}"
    osid = "{{ $osid }}"
    keepassxc = "{{ $keepassxcdb }}"
    features.secrets = {{ $secrets }}
    features.powerful = {{ $powerful }}
    features.headless = {{ $headless }}
    features.ephemeral = {{ $ephemeral }}
    features.kids = {{ $kids }}
    features.codespace = {{ $codespace }}

[edit]
command = {{ $editor | quote }}
args = ["--wait"]

[keepassxc]
database = {{ $keepassxcdb | quote }}
args = ["--no-password","-k",".keepassxc/keypass.keyx"]
prompt = false