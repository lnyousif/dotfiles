#!/usr/bin/env bash

export PATH="$HOME/.local/bin/:$PATH"

mkdir -p "$HOME/Downloads/AppImages"

{{ range $setup, $value := .setups }}

  {{ if $value }}

    echo "Install Packages for: {{ $setup }}"

    echo "installing from data packages"

    # Linux self installing packages
    echo "Installing self installing packages"

    {{ range index $.packages $setup "linux" "common" "linux_url" }}
      bash -c {{ . | quote }}
    {{ end }}

    # Executables from GitHub
    echo "Installing executables from GitHub"

    ## Appimages
    echo "Installing AppImages"
    {{ range index $.packages $setup "linux" "common" "dra" "appimage" }}
      echo "Downloading {{.}}"
      dra download -o "$HOME"/Downloads/AppImages/ -i {{.}}
    {{ end }}

    ## Binaries
    echo "Installing binary executables"
    {{ range index $.packages $setup "linux" "common" "dra" "bin" }}
      echo "Downloading {{.}}"
      dra download -o "$HOME"/.local/bin/ -i {{.}}
    {{ end }}


    # Native packages

    {{ if or (eq $.osid "linux-debian") (eq $.osid "linux-ubuntu") (eq $.osid "linux-debian ubuntu") (eq $.osid "linux-ubuntu debian") }}
        ## Debian
        echo "Installing Debian Packages"

        sudo nala install --update -y -o APT::Get::AllowUnauthenticated=true {{ range index $.packages $setup "linux" "common" "apt" }} {{.}}{{ end }}
        sudo nala install --update -y -o APT::Get::AllowUnauthenticated=true {{ range index $.packages $setup "linux" "common" "apt_url" }}{{. | quote}} {{ end }}

        {{ range index $.packages $setup "linux" "common" "apt_junk" }}
        sudo nala remove -y {{ . | quote }}
        {{ end }}


        if [[ $XDG_SESSION_DESKTOP == "KDE" ]]; then
          sudo nala install --update -y -o APT::Get::AllowUnauthenticated=true {{ range index $.packages $setup "linux" "common" "kde" }} {{.}}{{ end }}
        fi

        if hostnamectl | grep -iq 'starlite'; then
          echo "Installing tablet specific packages"
          sudo nala install --update -y -o APT::Get::AllowUnauthenticated=true {{ range index $.packages $setup "linux" "common" "tablet" }} {{.}}{{ end }}
        fi
    {{ else if eq $.osid "linux-fedora" }}
        ## Fedora
        echo "Installing RPM packages"

        sudo dnf5 install -y {{ range index $.packages $setup "linux" "common" "apt" }} {{.}}{{ end }}
        {{ range index $.packages $setup "linux" "common" "apt_url" }}
        sudo dnf5 install -y {{ . | quote }}
        {{ end }}

        {{ range index $.packages $setup "linux" "common" "apt_junk" }}
        sudo dnf5 remove -y {{ . | quote }}
        {{ end }}


        if [[ $XDG_SESSION_DESKTOP == "KDE" ]]; then
          sudo dnf5 install -y {{ range index $.packages $setup "linux" "common" "kde" }} {{.}}{{ end }}
        fi

        if hostnamectl | grep -iq 'starlite'; then
          echo "Installing tablet specific packages"
          sudo dnf5 install -y {{ range index $.packages $setup "linux" "common" "tablet" }} {{.}}{{ end }}
        fi


    {{ else if eq .osid "linux-arch" }}
        ## Arch
        echo "Installing Arch packages"

        sudo pacman -Syu --needed {{ range index $.packages $setup "linux" "common" "apt" }} {{.}}{{end}} 

        if [[ $XDG_SESSION_DESKTOP == "KDE" ]]; then
          sudo pacman -Syu --needed {{ range index $.packages $setup "linux" "common" "kde" }} {{.}}{{ end }}
        fi

        if hostnamectl | grep -iq 'starlite'; then
          echo "Installing tablet specific packages"
          sudo pacman -Syu --needed {{ range index $.packages $setup "linux" "common" "tablet" }} {{.}}{{ end }}
        fi

        if type -P yay >/dev/null 2>&1; then
          yay -Syu --needed {{ range index $.packages $setup "linux" "common" "apt" }} {{.}}{{ end }}
        elif type -P paru >/dev/null 2>&1; then
          paru -Syu --needed {{ range index $.packages $setup "linux" "common" "kde" }} {{.}}{{ end }}
        fi
    {{ end }}


    # Python packages
    echo "Installing Python packages with pip"
    {{ range index $.packages $setup "linux" "common" "pips" }}
    pip install {{ . | quote }}
    {{ end }}

  {{ end }}

{{ end }}
