# Function to toggle origin remote between HTTPS and SSH
toggle_git_remote() {
    echo "Toggling origin remote between HTTPS and SSH..."

    # Get the current origin URL
    current_url=$(git remote get-url origin)

    # Check if the URL is HTTPS or SSH
    if [[ $current_url == https://* ]]; then
        # Convert HTTPS URL to SSH URL
        ssh_url=$(echo "$current_url" | sed -e 's|https://|git@|' -e 's|/|:|' -e 's|\.com/|\.com:|')

        # Set the new SSH URL as the origin remote
        git remote set-url origin "$ssh_url"
        echo "Origin remote switched to SSH: $ssh_url"
    elif [[ $current_url == git@* ]]; then
        # Convert SSH URL to HTTPS URL
        https_url=$(echo "$current_url" | sed -e 's|git@|https://|' -e 's|:|/|' -e 's|\.com:|\.com/|')

        # Set the new HTTPS URL as the origin remote
        git remote set-url origin "$https_url"
        echo "Origin remote switched to HTTPS: $https_url"
    else
        echo "Origin remote URL format not recognized. No changes made."
    fi
}


# Search for a running process by name
psgrep() {
    if [ -z "$1" ]; then
        echo "Usage: psgrep <process_name>"
        return 1
    fi
    ps aux | grep -i "$1" | grep -v grep
}

# Extract various archive types with one command
extract() {
    if [ -f "$1" ]; then
        case "$1" in
            *.tar.bz2)   tar xjf "$1"    ;;
            *.tar.gz)    tar xzf "$1"    ;;
            *.tar.xz)    tar xJf "$1"    ;;
            *.tar)       tar xf "$1"     ;;
            *.tbz2)      tar xjf "$1"    ;;
            *.tgz)       tar xzf "$1"    ;;
            *.zip)       unzip "$1"      ;;
            *.rar)       unrar x "$1"    ;;
            *.7z)        7z x "$1"       ;;
            *)           echo "Cannot extract '$1' via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Show your public IP address
myip() {
    curl -s https://ipinfo.io/ip
}
